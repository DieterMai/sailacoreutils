package dev.dietermai.coreutil.cat;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Stream;

import org.junit.jupiter.api.extension.ExtensionContext;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.ArgumentsProvider;

public class ShowNonprintingProvider implements ArgumentsProvider {

	@Override
	public Stream<? extends Arguments> provideArguments(ExtensionContext context) throws Exception {
		List<Arguments> arguments = new ArrayList<>();
		arguments.add(Arguments.of("^A", "\u0001"));
		arguments.add(Arguments.of("^B", "\u0002"));
		arguments.add(Arguments.of("^C", "\u0003"));
		arguments.add(Arguments.of("^D", "\u0004"));
		arguments.add(Arguments.of("^E", "\u0005"));
		arguments.add(Arguments.of("^F", "\u0006"));
		arguments.add(Arguments.of("^G", "\u0007"));
		arguments.add(Arguments.of("^H", "\u0008"));
		arguments.add(Arguments.of("^K", "\u000b"));
		arguments.add(Arguments.of("^L", "\u000c"));
		arguments.add(Arguments.of("^M", "\r"));
		arguments.add(Arguments.of("^N", "\u000e"));
		arguments.add(Arguments.of("^O", "\u000f"));
		arguments.add(Arguments.of("^P", "\u0010"));
		arguments.add(Arguments.of("^Q", "\u0011"));
		arguments.add(Arguments.of("^R", "\u0012"));
		arguments.add(Arguments.of("^S", "\u0013"));
		arguments.add(Arguments.of("^T", "\u0014"));
		arguments.add(Arguments.of("^U", "\u0015"));
		arguments.add(Arguments.of("^V", "\u0016"));
		arguments.add(Arguments.of("^W", "\u0017"));
		arguments.add(Arguments.of("^X", "\u0018"));
		arguments.add(Arguments.of("^Y", "\u0019"));
		arguments.add(Arguments.of("^Z", "\u001a"));
		arguments.add(Arguments.of("^[", "\u001b"));
		arguments.add(Arguments.of("^\\", "\u001c"));
		arguments.add(Arguments.of("^]", "\u001d"));
		arguments.add(Arguments.of("^^", "\u001e"));
		arguments.add(Arguments.of("^_", "\u001f"));
		arguments.add(Arguments.of("^?", "\u007f"));
		arguments.add(Arguments.of("M-^@", "\u0080"));
		arguments.add(Arguments.of("M-^A", "\u0081"));
		arguments.add(Arguments.of("M-^B", "\u0082"));
		arguments.add(Arguments.of("M-^C", "\u0083"));
		arguments.add(Arguments.of("M-^D", "\u0084"));
		arguments.add(Arguments.of("M-^E", "\u0085"));
		arguments.add(Arguments.of("M-^F", "\u0086"));
		arguments.add(Arguments.of("M-^G", "\u0087"));
		arguments.add(Arguments.of("M-^H", "\u0088"));
		arguments.add(Arguments.of("M-^I", "\u0089"));
		arguments.add(Arguments.of("M-^J", "\u008a"));
		arguments.add(Arguments.of("M-^K", "\u008b"));
		arguments.add(Arguments.of("M-^L", "\u008c"));
		arguments.add(Arguments.of("M-^M", "\u008d"));
		arguments.add(Arguments.of("M-^N", "\u008e"));
		arguments.add(Arguments.of("M-^O", "\u008f"));
		arguments.add(Arguments.of("M-^P", "\u0090"));
		arguments.add(Arguments.of("M-^Q", "\u0091"));
		arguments.add(Arguments.of("M-^R", "\u0092"));
		arguments.add(Arguments.of("M-^S", "\u0093"));
		arguments.add(Arguments.of("M-^T", "\u0094"));
		arguments.add(Arguments.of("M-^U", "\u0095"));
		arguments.add(Arguments.of("M-^V", "\u0096"));
		arguments.add(Arguments.of("M-^W", "\u0097"));
		arguments.add(Arguments.of("M-^X", "\u0098"));
		arguments.add(Arguments.of("M-^Y", "\u0099"));
		arguments.add(Arguments.of("M-^Z", "\u009a"));
		arguments.add(Arguments.of("M-^[", "\u009b"));
		arguments.add(Arguments.of("M-^\\", "\u009c"));
		arguments.add(Arguments.of("M-^]", "\u009d"));
		arguments.add(Arguments.of("M-^^", "\u009e"));
		arguments.add(Arguments.of("M-^_", "\u009f"));
		arguments.add(Arguments.of("M- ", "\u00a0"));
		arguments.add(Arguments.of("M-!", "\u00a1"));
		arguments.add(Arguments.of("M-\"", "\u00a2"));
		arguments.add(Arguments.of("M-#", "\u00a3"));
		arguments.add(Arguments.of("M-$", "\u00a4"));
		arguments.add(Arguments.of("M-%", "\u00a5"));
		arguments.add(Arguments.of("M-&", "\u00a6"));
		arguments.add(Arguments.of("M-'", "\u00a7"));
		arguments.add(Arguments.of("M-(", "\u00a8"));
		arguments.add(Arguments.of("M-)", "\u00a9"));
		arguments.add(Arguments.of("M-*", "\u00aa"));
		arguments.add(Arguments.of("M-+", "\u00ab"));
		arguments.add(Arguments.of("M-,", "\u00ac"));
		arguments.add(Arguments.of("M--", "\u00ad"));
		arguments.add(Arguments.of("M-.", "\u00ae"));
		arguments.add(Arguments.of("M-/", "\u00af"));
		arguments.add(Arguments.of("M-0", "\u00b0"));
		arguments.add(Arguments.of("M-1", "\u00b1"));
		arguments.add(Arguments.of("M-2", "\u00b2"));
		arguments.add(Arguments.of("M-3", "\u00b3"));
		arguments.add(Arguments.of("M-4", "\u00b4"));
		arguments.add(Arguments.of("M-5", "\u00b5"));
		arguments.add(Arguments.of("M-6", "\u00b6"));
		arguments.add(Arguments.of("M-7", "\u00b7"));
		arguments.add(Arguments.of("M-8", "\u00b8"));
		arguments.add(Arguments.of("M-9", "\u00b9"));
		arguments.add(Arguments.of("M-:", "\u00ba"));
		arguments.add(Arguments.of("M-;", "\u00bb"));
		arguments.add(Arguments.of("M-<", "\u00bc"));
		arguments.add(Arguments.of("M-=", "\u00bd"));
		arguments.add(Arguments.of("M->", "\u00be"));
		arguments.add(Arguments.of("M-?", "\u00bf"));
		arguments.add(Arguments.of("M-@", "\u00c0"));
		arguments.add(Arguments.of("M-A", "\u00c1"));
		arguments.add(Arguments.of("M-B", "\u00c2"));
		arguments.add(Arguments.of("M-C", "\u00c3"));
		arguments.add(Arguments.of("M-D", "\u00c4"));
		arguments.add(Arguments.of("M-E", "\u00c5"));
		arguments.add(Arguments.of("M-F", "\u00c6"));
		arguments.add(Arguments.of("M-G", "\u00c7"));
		arguments.add(Arguments.of("M-H", "\u00c8"));
		arguments.add(Arguments.of("M-I", "\u00c9"));
		arguments.add(Arguments.of("M-J", "\u00ca"));
		arguments.add(Arguments.of("M-K", "\u00cb"));
		arguments.add(Arguments.of("M-L", "\u00cc"));
		arguments.add(Arguments.of("M-M", "\u00cd"));
		arguments.add(Arguments.of("M-N", "\u00ce"));
		arguments.add(Arguments.of("M-O", "\u00cf"));
		arguments.add(Arguments.of("M-P", "\u00d0"));
		arguments.add(Arguments.of("M-Q", "\u00d1"));
		arguments.add(Arguments.of("M-R", "\u00d2"));
		arguments.add(Arguments.of("M-S", "\u00d3"));
		arguments.add(Arguments.of("M-T", "\u00d4"));
		arguments.add(Arguments.of("M-U", "\u00d5"));
		arguments.add(Arguments.of("M-V", "\u00d6"));
		arguments.add(Arguments.of("M-W", "\u00d7"));
		arguments.add(Arguments.of("M-X", "\u00d8"));
		arguments.add(Arguments.of("M-Y", "\u00d9"));
		arguments.add(Arguments.of("M-Z", "\u00da"));
		arguments.add(Arguments.of("M-[", "\u00db"));
		arguments.add(Arguments.of("M-\\", "\u00dc"));
		arguments.add(Arguments.of("M-]", "\u00dd"));
		arguments.add(Arguments.of("M-^", "\u00de"));
		arguments.add(Arguments.of("M-_", "\u00df"));
		arguments.add(Arguments.of("M-`", "\u00e0"));
		arguments.add(Arguments.of("M-a", "\u00e1"));
		arguments.add(Arguments.of("M-b", "\u00e2"));
		arguments.add(Arguments.of("M-c", "\u00e3"));
		arguments.add(Arguments.of("M-d", "\u00e4"));
		arguments.add(Arguments.of("M-e", "\u00e5"));
		arguments.add(Arguments.of("M-f", "\u00e6"));
		arguments.add(Arguments.of("M-g", "\u00e7"));
		arguments.add(Arguments.of("M-h", "\u00e8"));
		arguments.add(Arguments.of("M-i", "\u00e9"));
		arguments.add(Arguments.of("M-j", "\u00ea"));
		arguments.add(Arguments.of("M-k", "\u00eb"));
		arguments.add(Arguments.of("M-l", "\u00ec"));
		arguments.add(Arguments.of("M-m", "\u00ed"));
		arguments.add(Arguments.of("M-n", "\u00ee"));
		arguments.add(Arguments.of("M-o", "\u00ef"));
		arguments.add(Arguments.of("M-p", "\u00f0"));
		arguments.add(Arguments.of("M-q", "\u00f1"));
		arguments.add(Arguments.of("M-r", "\u00f2"));
		arguments.add(Arguments.of("M-s", "\u00f3"));
		arguments.add(Arguments.of("M-t", "\u00f4"));
		arguments.add(Arguments.of("M-u", "\u00f5"));
		arguments.add(Arguments.of("M-v", "\u00f6"));
		arguments.add(Arguments.of("M-w", "\u00f7"));
		arguments.add(Arguments.of("M-x", "\u00f8"));
		arguments.add(Arguments.of("M-y", "\u00f9"));
		arguments.add(Arguments.of("M-z", "\u00fa"));
		arguments.add(Arguments.of("M-{", "\u00fb"));
		arguments.add(Arguments.of("M-|", "\u00fc"));
		arguments.add(Arguments.of("M-}", "\u00fd"));
		arguments.add(Arguments.of("M-~", "\u00fe"));
		arguments.add(Arguments.of("M-^?", "\u00ff"));
		return arguments.stream();
	}

}
